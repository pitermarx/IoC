{"name":"Ioc","tagline":"Minimalistic Inversion of Control Container for .Net","body":"### [_IoC_](http://pitermarx.github.io/IoC)\r\n\r\n_A simple Inversion of Control Container_\r\nThe instance resolution is made by Type and by name.\r\n\r\n#### Project Setup\r\n\r\n_Includes a solution with a test project and two classes: IoC.Factory and IoC.Container_ \r\n\r\n#### License\r\n\r\nThe content of this project itself is licensed under the\r\n[Creative Commons Attribution 3.0 license](http://creativecommons.org/licenses/by/3.0/us/deed.en_US),\r\nand the underlying source code used to format and display that content\r\nis licensed under the [MIT license](http://opensource.org/licenses/mit-license.php).\r\n\r\n#### Example\r\n```cs\r\n// if doesn't exist, create one\r\nvar container = Factory.GetContainer(\"TestContainer\");\r\n\r\n// register as instanciator\r\ncontainer.Register(() => new MyAwesomeObject());\r\n\r\n// register as a named instanciator\r\ncontainer.Register(() => new MyAwesomeObject2(), \"MySpecialObject2\");\r\n\r\n// register as singleton\r\nvar myObject = new MyAwesomeObject();\r\ncontainer.Register(() => myObject, \"MyAwesomeSingleton\");\r\n\r\n// you may register a type by interface\r\nvar myObject2 = new MyAwesomeObject();\r\ncontainer.Register<IMyAwesomeObject>(() => myObject2);\r\n\r\n// Seal the container to prevent further registers\r\n// any register will throw after this\r\ncontainer.Seal();\r\n\r\n// get the registers\r\n// the resolution is first by type and then by name\r\nvar newAwesomeObject = container.Get<MyAwesomeObject>();\r\nvar newAwesomeObject2 = container.Get<MyAwesomeObject2>(\"MySpecialObject2\");\r\nvar sameAsMyObject = container.Get<MyAwesomeObject>(\"MyAwesomeSingleton\");\r\nvar sameAsMyObject2 = container.Get<IMyAwesomeObject>();\r\n\r\n// will throw KeyNotFoundException\r\ncontainer.Get<IMyAwesomeObject>(\"SomethingNotRegistered\"); \r\ncontainer.Get<MyAwesomeObject3>(); \r\n```\r\n\r\n[![Build status](https://ci.appveyor.com/api/projects/status/iarf25yo0iogy9c7)](https://ci.appveyor.com/project/pitermarx/ioc)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}